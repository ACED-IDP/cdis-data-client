# Adapted from the Upstream Github Actions file to make future PR's easier to review
# Currently this only builds the macOS packages for intel and arm architectures
# Re-add the Windows and Linux builds ahead of the next PR to upstream
# ref: https://github.com/uc-cdis/cdis-data-client/blob/master/.github/workflows/build_and_test_push.yaml

name: "Test, build, sync to AWS, and create release (on tagged push)"
on:
- push
- workflow_dispatch

jobs:
  build:
    env:
      goarch: amd64
    runs-on: macos-13

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Setup Go 1.17
        uses: actions/setup-go@v4
        with:
          go-version: '1.17'

      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        env:
          APPLE_CERT_DATA: ${{ secrets.APPLE_CERT_DATA }}
          APPLE_CERT_PASSWORD: ${{ secrets.APPLE_CERT_PASSWORD }}
          APPLE_NOTARY_USER: ${{ secrets.APPLE_NOTARY_USER }}
          APPLE_NOTARY_PASSWORD: ${{ secrets.APPLE_NOTARY_PASSWORD }}
          APPLE_NOTARY_DATA: ${{ secrets.APPLE_NOTARY_DATA }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}

      - name: Build executable
        shell: bash
        env:
          APPLE_CERT_DATA: ${{ secrets.APPLE_CERT_DATA }}
          APPLE_CERT_PASSWORD: ${{ secrets.APPLE_CERT_PASSWORD }}
          APPLE_NOTARY_USER: ${{ secrets.APPLE_NOTARY_USER }}
          APPLE_NOTARY_PASSWORD: ${{ secrets.APPLE_NOTARY_PASSWORD }}
          APPLE_NOTARY_DATA: ${{ secrets.APPLE_NOTARY_DATA }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
        run: |
          chmod +x build.sh
          ./build.sh
          
          # Setup
          SIGNFILE="$(pwd)/dist/gen3-client"

          # Export certs
          echo "$APPLE_CERT_DATA" | base64 --decode > /tmp/certs.p12

          # Create keychain
          security create-keychain -p actions macos-build.keychain
          security default-keychain -s macos-build.keychain
          security unlock-keychain -p actions macos-build.keychain
          security set-keychain-settings -t 3600 -u macos-build.keychain

          # Import certs to keychain
          security import /tmp/certs.p12 -k ~/Library/Keychains/macos-build.keychain -P "$APPLE_CERT_PASSWORD" -T /usr/bin/codesign -T /usr/bin/productsign
          
          # Key signing
          security set-key-partition-list -S apple-tool:,apple: -s -k actions macos-build.keychain

          # Verify keychain things
          security find-identity -v macos-build.keychain | grep "$APPLE_TEAM_ID" | grep "Developer ID Application"
          security find-identity -v macos-build.keychain | grep "$APPLE_TEAM_ID" | grep "Developer ID Installer"

          # Force the codesignature
          codesign --force --options=runtime --keychain "/Users/runner/Library/Keychains/macos-build.keychain-db" -s "$APPLE_TEAM_ID" "$SIGNFILE"

          # Verify the code signature
          codesign -v "$SIGNFILE" --verbose

          mkdir -p ./dist/pkg
          cp ./dist/gen3-client ./dist/pkg/gen3-client
          pkgbuild --identifier "org.uc-cdis.gen3-client.pkg" --timestamp --install-location /Applications --root ./dist/pkg installer.pkg
          pwd
          ls
          productbuild --resources ./resources --distribution ./distribution.xml gen3-client.pkg
          productsign --sign "$APPLE_TEAM_ID" --timestamp gen3-client.pkg gen3-client_signed.pkg

          xcrun notarytool store-credentials "notarytool-profile" --apple-id "$APPLE_NOTARY_USER" --team-id "$APPLE_TEAM_ID" --password "$APPLE_NOTARY_PASSWORD" --keychain /Users/runner/Library/Keychains/macos-build.keychain-db
          xcrun notarytool submit gen3-client_signed.pkg --keychain-profile "notarytool-profile" --wait
          xcrun stapler staple gen3-client_signed.pkg
          mv gen3-client_signed.pkg dataclient_osx.pkg

      - name: Upload signed artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact-darwin-signed
          path: dataclient_osx.pkg
